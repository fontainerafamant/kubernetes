apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
              #valueFrom:
               # secretKeyRef:
                #  name: mysql-secrets
                 # key: ROOT_PASSWORD
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - mountPath: "/var/lib/mysql"
              subPath: "mysql"
              name: mysql-data
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-disk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE mybooks;
    USE mybooks;

    CREATE TABLE mybook (
        id INT NOT NULL AUTO_INCREMENT,
        author VARCHAR(50),
        title VARCHAR(50),
        isbn INT,
        PRIMARY KEY (id)
    );

    INSERT INTO mybook
      (author, title, isbn)
    VALUES
      ('RANDRIA', 'Python', 1345674),
      ('RAKOTO', 'Devops', 156433);
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-disk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi